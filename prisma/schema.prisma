generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String @unique @default(cuid())
  username      String @unique
  password      String
  referral_code String @unique @default(uuid())
  upload_key    String @unique @default(cuid())

  images Image[]
  space_used Int @default(0)
  max_space Int @default(1000000000)

  referrals      Referral[]
  image_comments ImageComment[]

  comments Comment[]

  badges String @default("user")

  isAdmin Boolean @default(false) // will later be replaced with a permission integer, or RBAC

  referral_limit Int @default(5)

  embed_title  String @default("Uploaded by {{uploader.name}}")
  embed_author String @default("{{image.upload_date}}")
  embed_colour String @default("#252525")

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Comment {
  id String @unique @default(cuid())

  commenter_id String
  commenter    User   @relation(fields: [commenter_id], references: [id])

  receiver_id String

  content String

  hidden  Boolean
  flagged Boolean

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Referral {
  referrer_id String
  referrer    User   @relation(fields: [referrer_id], references: [id])

  referred_id String @unique

  created_at DateTime @default(now())
}

model Image {
  id String @unique @default(cuid())

  uploader_id String
  uploader    User   @relation(fields: [uploader_id], references: [id])

  display_name String
  size         Int
  type         String

  comments ImageComment[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model ImageComment {
  id           String @unique @default(cuid())
  image_id     String
  image        Image  @relation(fields: [image_id], references: [id])
  commenter_id String
  commenter    User   @relation(fields: [commenter_id], references: [id])

  content String

  hidden  Boolean
  flagged Boolean

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
